{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Lab 0 Part E","provenance":[],"authorship_tag":"ABX9TyPL+svjLH86x0QXFNYc3sa2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"n-R3a5z2imTM"},"source":["# Showing Linear Fitting Formulas Work on Data with Noise"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"ReqlRj5qi2nX","executionInfo":{"status":"ok","timestamp":1632334005573,"user_tz":240,"elapsed":314,"user":{"displayName":"Adrian deCola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiFjK6JDijJEalWwiYWWfoNzFy4nVtLS9MOwWEa=s64","userId":"08742826821807743290"}},"outputId":"c25f98fc-efd0-47f5-ac6b-d32cfdc3afce"},"source":["from matplotlib import pyplot as plt\n","import statistics as stats\n","import numpy as np\n","import random\n","\n","# The underlying line is y = 15 + 2x\n","x = np.linspace(1, 50, 50)\n","y = 2*x + 15\n","\n","# Lets add noise to line\n","noise = np.random.normal(0, 5, y.shape)\n","y = y + noise\n","\n","# Lets show what the data looks like\n","plt.scatter(x, y)\n","plt.title(\"Data without Linearly Fitted Line\")\n","plt.xlabel(\"x\")\n","plt.ylabel(\"y\")\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":346},"id":"c0364f8yj7zE","executionInfo":{"status":"ok","timestamp":1632334008008,"user_tz":240,"elapsed":333,"user":{"displayName":"Adrian deCola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiFjK6JDijJEalWwiYWWfoNzFy4nVtLS9MOwWEa=s64","userId":"08742826821807743290"}},"outputId":"cecd84d5-539f-482f-d5d8-f76f1d7a2258"},"source":["# Calculating the Linear Fitting\n","# formula of for y = mx + c\n","\n","sum_x = 0\n","for i in range(len(x)): \n","  sum_x += x[i]\n","\n","N = 0\n","for i in range(len(x)):\n","  N += 1\n","\n","sum_y = 0\n","for i in range(len(y)):\n","  sum_y += y[i]\n","\n","sum_xy = 0\n","for i in range(len(x)):\n","  sum_xy += x[i] * y[i]\n","\n","sum_x_squared = 0\n","for i in range(len(x)): \n","  sum_x_squared += x[i] * x[i]\n","\n","delta = N*sum_x_squared - (sum_x)**2\n","m = (N*sum_xy - sum_x*sum_y) / delta\n","c = (sum_x_squared*sum_y - sum_x*sum_xy) / delta\n","\n","line_y = m*x + c\n","\n","# putting the line on the new graph\n","plt.plot(x, line_y)\n","plt.scatter(x, y)\n","plt.title(\"Data with Linearly Fitted Line\")\n","plt.xlabel(\"x\")\n","plt.ylabel(\"y\")\n","plt.show()\n","\n","print(f\"The calculated m was {round(m, ndigits=4)}.\")\n","print(f\"The calculated c was {round(c, ndigits=4)}.\")\n","print(\"The true slope was 2 and the true intercept was 15.\")"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["The calculated m was 1.971.\n","The calculated c was 15.3264.\n","The true slope was 2 and the true intercept was 15.\n"]}]},{"cell_type":"markdown","metadata":{"id":"Tg5gpRsjqa8i"},"source":["# Showing the Central Limit Theorem and that the Standard Deviation of the Sample Means Distribution decreases by a factor of $\\frac{1}{\\sqrt{N}}$."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"SPoI0-r-qn4T","executionInfo":{"status":"ok","timestamp":1632334930091,"user_tz":240,"elapsed":263,"user":{"displayName":"Adrian deCola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiFjK6JDijJEalWwiYWWfoNzFy4nVtLS9MOwWEa=s64","userId":"08742826821807743290"}},"outputId":"20af00bb-a5ad-46b8-89d1-24939d5c53d1"},"source":["# Creating the underlying distrobution from which we will sample from\n","# randomly (uniformly) distributed from 0 to 1\n","dist = np.random.uniform(0., 1., 10000)\n","\n","# Plotting that underlying distrobution as a histogram with 10 bins or \n","plt.hist(dist, bins = 20)\n","plt.xticks(np.arange(0, 1.1, 0.1))\n","plt.show()"],"execution_count":38,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"eF3Ic9WorqWm"},"source":["def get_sample(dist, N):\n","  sum_sample = 0\n","  for i in range(N):\n","    index_to_grab = random.randint(0,9999)\n","    sum_sample += dist[index_to_grab]\n","  sample_mean = sum_sample / N\n","  return sample_mean"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":897},"id":"1W23kyvwuSHE","executionInfo":{"status":"ok","timestamp":1632335683357,"user_tz":240,"elapsed":2550,"user":{"displayName":"Adrian deCola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiFjK6JDijJEalWwiYWWfoNzFy4nVtLS9MOwWEa=s64","userId":"08742826821807743290"}},"outputId":"dae47ea8-7519-4cad-b647-6435f3ecfabc"},"source":["# Lets try an N of 10\n","\n","# We still want more sample means to be able to see if its Gaussian-like\n","# Lets try 30\n","means = []\n","N = 10\n","for i in range(30):\n","  means.append(get_sample(dist, N))\n","plt.hist(means, bins = 20)\n","plt.xticks(np.arange(0, 1.1, 0.1))\n","plt.show()\n","\n","print(\"This doesn't look too Gaussian. Let's try 1000 sample means.\")\n","\n","means = []\n","for i in range(1000):\n","  means.append(get_sample(dist, N))\n","plt.hist(means, bins = 20)\n","plt.xticks(np.arange(0, 1.1, 0.1))\n","plt.show()\n","\n","print(\"Looks Better!\")\n","\n","stdev_10 = round(stats.stdev(means), ndigits=6)\n","\n","print(f\"The standard deviation of these sample means distribution is {stdev_10}.\")\n","\n","print()\n","\n","print(\"Now lets increase our sample sizes by a factor of 100 (to 1000). We should expect our sample means standard deviation do decrease be a factor of 10.\")\n","\n","means = []\n","N = 1000\n","for i in range(1000):\n","  means.append(get_sample(dist, N))\n","plt.hist(means, bins = 20)\n","plt.xticks(np.arange(0, 1.1, 0.1))\n","plt.show()\n","\n","stdev_1000 = round(stats.stdev(means), ndigits=6)\n","\n","print(\"We can see that our gaussian has become much more slimmer, as expected.\")\n","print(f\"The standard deviation of these sample means distribution is {stdev_1000}.\")\n","print(f\"The sample means standard deviation decreased be a factor of {round(stdev_10 / stdev_1000, ndigits=3)}, which in agreement with the expected value of 10.\")\n"],"execution_count":52,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["This doesn't look too Gaussian. Let's try 1000 sample means.\n"]},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["Looks Better!\n","The standard deviation of these sample means distribution is 0.089603.\n","\n","Now lets increase our sample sizes by a factor of 100 (to 1000). We should expect our sample means standard deviation do decrease be a factor of 10.\n"]},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["We can see that our gaussian has become much more slimmer, as expected.\n","The standard deviation of these sample means distribution is 0.00891.\n","The sample means standard deviation decreased be a factor of 10.056, which in agreement with the expected value of 10.\n"]}]},{"cell_type":"markdown","metadata":{"id":"bXQeuYK_y9Mo"},"source":["The sample mean standard deviations we got are actually of the form $$\\frac{\\sigma_0}{\\sqrt{N}}$$\n","Where $\\sigma_0$ is the standard deviation of the underlying distrobution. Lets show this is accurate for our distributions of N = 10 and N = 1000."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-YPzHXMazdQz","executionInfo":{"status":"ok","timestamp":1632336128332,"user_tz":240,"elapsed":115,"user":{"displayName":"Adrian deCola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiFjK6JDijJEalWwiYWWfoNzFy4nVtLS9MOwWEa=s64","userId":"08742826821807743290"}},"outputId":"cf0895e2-e4bb-45bf-c6ec-ab5626142d7f"},"source":["sigma = stats.stdev(dist)\n","\n","exp_stdev_10 = round(sigma / 10**(0.5), ndigits=6)\n","\n","exp_stdev_1000 = round(sigma / 1000**(0.5), ndigits=6)\n","\n","print(f\"The explected standard deviation for the sample means when N = 10 is {exp_stdev_10}, which is in agreement with our value of {stdev_10}.\")\n","print(f\"The explected standard deviation for the sample means when N = 1000 is {exp_stdev_1000}, which is in agreement with our value of {stdev_1000}.\")"],"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["The explected standard deviation for the sample means when N = 10 is 0.090963, which is in agreement with our value of 0.089603.\n","The explected standard deviation for the sample means when N = 1000 is 0.009096, which is in agreement with our value of 0.00891.\n"]}]},{"cell_type":"code","metadata":{"id":"9kMukpObzsH5"},"source":[""],"execution_count":null,"outputs":[]}]}